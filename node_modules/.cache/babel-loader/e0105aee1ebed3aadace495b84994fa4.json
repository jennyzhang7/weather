{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jennyzhang/Desktop/weather-qualia/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ReactDOM from \"react-dom\";\nconst API_KEY = \"09ac365afdba71cc5a62d2f4cf8f91aa\";\n\nfunction App() {\n  _s();\n\n  const [results, setResults] = useState([]);\n  const [longitude, setLongitude] = useState(\"\");\n  const [latitude, setLatitude] = useState(\"\");\n  const [isFahrenheit, setIsFahrenheit] = useState(true);\n  useEffect(() => {\n    getLocation();\n    fetchWeatherData();\n  }, []);\n  var x = document.getElementById(\"demo\");\n\n  function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n      console.log(\"Longitude\" + longitude);\n      console.log(\"Latitude\" + latitude);\n    } else {\n      x.innerHTML = \"Geolocation is not supported by this browser.\";\n    }\n  }\n\n  function showPosition(position) {\n    console.log(position);\n    setLongitude(String(position.coords.longitude));\n    setLatitude(String(position.coords.latitude));\n  }\n\n  const convertToFahrenheit = kelvinTemp => {\n    return ((kelvinTemp - 273.15) * 9 / 5 + 32).toFixed(2);\n  };\n\n  const convertToCelcius = kelvinTemp => {\n    return (kelvinTemp - 273.15).toFixed(2);\n  };\n\n  const getTemperature = kelvinTemp => {\n    if (isFahrenheit) {\n      return convertToFahrenheit(kelvinTemp);\n    } else {\n      return convertToCelcius(kelvinTemp);\n    }\n  };\n\n  const getMeasurement = () => {\n    if (isFahrenheit) {\n      return \"° F\";\n    } else {\n      return \"° C\";\n    }\n  };\n\n  const toggleMeasurement = () => {\n    setIsFahrenheit(!isFahrenheit);\n  };\n\n  const fetchWeatherData = async () => {\n    console.log(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}`);\n    console.log(results.length);\n\n    if (latitude !== \"\" || longitude !== \"\") {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}`);\n      const data = await response.json();\n      console.log(data);\n      const dataPoint = {\n        temp: data.main.temp,\n        city: data.name,\n        icon: data.weather[0].icon\n      };\n      setResults(dataPoint);\n      console.log(results);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"demo\",\n      children: [latitude == \"\" && longitude == \"\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Click Get Weather to check out today's weather forecast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), latitude !== \"\" && longitude !== \"\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://openweathermap.org/img/wn/${results.icon}@2x.png`,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: results.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [getTemperature(results.temp), \" \", getMeasurement()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => fetchWeatherData(),\n      children: \"Get Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => toggleMeasurement(),\n      children: \"Celcius/Fahrenheit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/TEbzraszj1GHTVh7H4BsCTQvqo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jennyzhang/Desktop/weather-qualia/src/App.js"],"names":["useState","useEffect","ReactDOM","API_KEY","App","results","setResults","longitude","setLongitude","latitude","setLatitude","isFahrenheit","setIsFahrenheit","getLocation","fetchWeatherData","x","document","getElementById","navigator","geolocation","getCurrentPosition","showPosition","console","log","innerHTML","position","String","coords","convertToFahrenheit","kelvinTemp","toFixed","convertToCelcius","getTemperature","getMeasurement","toggleMeasurement","length","response","fetch","data","json","dataPoint","temp","main","city","name","icon","weather"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,IAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,WAAW;AACXC,IAAAA,gBAAgB;AACjB,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAIC,CAAC,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAR;;AACA,WAASJ,WAAT,GAAuB;AACrB,QAAIK,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,YAAzC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAchB,SAA1B;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAad,QAAzB;AAED,KALD,MAKO;AACLM,MAAAA,CAAC,CAACS,SAAF,GAAc,+CAAd;AACD;AACF;;AAED,WAASH,YAAT,CAAsBI,QAAtB,EAAgC;AAC9BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACAjB,IAAAA,YAAY,CAACkB,MAAM,CAACD,QAAQ,CAACE,MAAT,CAAgBpB,SAAjB,CAAP,CAAZ;AACAG,IAAAA,WAAW,CAACgB,MAAM,CAACD,QAAQ,CAACE,MAAT,CAAgBlB,QAAjB,CAAP,CAAX;AACD;;AAED,QAAMmB,mBAAmB,GAAIC,UAAD,IAAgB;AAC1C,WAAO,CAAE,CAACA,UAAU,GAAG,MAAd,IAAwB,CAAzB,GAA8B,CAA9B,GAAkC,EAAnC,EAAuCC,OAAvC,CAA+C,CAA/C,CAAP;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAIF,UAAD,IAAgB;AACvC,WAAO,CAACA,UAAU,GAAG,MAAd,EAAsBC,OAAtB,CAA8B,CAA9B,CAAP;AACD,GAFD;;AAIA,QAAME,cAAc,GAAIH,UAAD,IAAgB;AACrC,QAAIlB,YAAJ,EAAkB;AAChB,aAAOiB,mBAAmB,CAACC,UAAD,CAA1B;AACD,KAFD,MAEO;AACL,aAAOE,gBAAgB,CAACF,UAAD,CAAvB;AACD;AACF,GAND;;AAQA,QAAMI,cAAc,GAAG,MAAM;AAC3B,QAAItB,YAAJ,EAAkB;AAChB,aAAO,KAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF,GAND;;AAQA,QAAMuB,iBAAiB,GAAG,MAAM;AAC9BtB,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,GAFD;;AAIA,QAAMG,gBAAgB,GAAG,YAAY;AACnCQ,IAAAA,OAAO,CAACC,GAAR,CACG,uDAAsDd,QAAS,QAAOF,SAAU,UAASJ,OAAQ,EADpG;AAGAmB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,OAAO,CAAC8B,MAApB;;AACA,QAAI1B,QAAQ,KAAK,EAAb,IAAmBF,SAAS,KAAK,EAArC,EAAyC;AACvC,YAAM6B,QAAQ,GAAG,MAAMC,KAAK,CACzB,uDAAsD5B,QAAS,QAAOF,SAAU,UAASJ,OAAQ,EADxE,CAA5B;AAIA,YAAMmC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAYe,IAAZ;AACA,YAAME,SAAS,GAAG;AAChBC,QAAAA,IAAI,EAAEH,IAAI,CAACI,IAAL,CAAUD,IADA;AAEhBE,QAAAA,IAAI,EAAEL,IAAI,CAACM,IAFK;AAGhBC,QAAAA,IAAI,EAAEP,IAAI,CAACQ,OAAL,CAAa,CAAb,EAAgBD;AAHN,OAAlB;AAKAvC,MAAAA,UAAU,CAACkC,SAAD,CAAV;AACAlB,MAAAA,OAAO,CAACC,GAAR,CAAYlB,OAAZ;AACD;AACF,GApBD;;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA,iBACEI,QAAQ,IAAI,EAAZ,IAAkBF,SAAS,IAAI,EAAhC,iBACG;AAAA,+BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF,uBAFJ,EASIE,QAAQ,KAAK,EAAb,IAAmBF,SAAS,KAAK,EAAlC,iBACC;AAAA,gCACE;AACE,UAAA,GAAG,EAAG,oCAAmCF,OAAO,CAACwC,IAAK,SADxD;AAEE,UAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAA,oBAAKxC,OAAO,CAACsC;AAAb;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA,qBACGX,cAAc,CAAC3B,OAAO,CAACoC,IAAT,CADjB,OACkCR,cAAc,EADhD;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA,sBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAwBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAMnB,gBAAgB,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF,eA4BE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAMoB,iBAAiB,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GAjHQ9B,G;;KAAAA,G;AAmHT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ReactDOM from \"react-dom\";\n\nconst API_KEY = \"09ac365afdba71cc5a62d2f4cf8f91aa\";\n\nfunction App() {\n  const [results, setResults] = useState([]);\n  const [longitude, setLongitude] = useState(\"\");\n  const [latitude, setLatitude] = useState(\"\");\n\n  const [isFahrenheit, setIsFahrenheit] = useState(true);\n\n  useEffect(() => {\n    getLocation();\n    fetchWeatherData();\n  }, []);\n\n  var x = document.getElementById(\"demo\");\n  function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n      console.log(\"Longitude\" + longitude);\n      console.log(\"Latitude\" + latitude);\n\n    } else {\n      x.innerHTML = \"Geolocation is not supported by this browser.\";\n    }\n  }\n\n  function showPosition(position) {\n    console.log(position);\n    setLongitude(String(position.coords.longitude));\n    setLatitude(String(position.coords.latitude));\n  }\n\n  const convertToFahrenheit = (kelvinTemp) => {\n    return (((kelvinTemp - 273.15) * 9) / 5 + 32).toFixed(2);\n  };\n\n  const convertToCelcius = (kelvinTemp) => {\n    return (kelvinTemp - 273.15).toFixed(2);\n  };\n\n  const getTemperature = (kelvinTemp) => {\n    if (isFahrenheit) {\n      return convertToFahrenheit(kelvinTemp);\n    } else {\n      return convertToCelcius(kelvinTemp);\n    }\n  };\n\n  const getMeasurement = () => {\n    if (isFahrenheit) {\n      return \"° F\";\n    } else {\n      return \"° C\";\n    }\n  };\n\n  const toggleMeasurement = () => {\n    setIsFahrenheit(!isFahrenheit);\n  };\n\n  const fetchWeatherData = async () => {\n    console.log(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}`\n    );\n    console.log(results.length)\n    if (latitude !== \"\" || longitude !== \"\") {\n      const response = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}`\n      );\n\n      const data = await response.json();\n      console.log(data);\n      const dataPoint = {\n        temp: data.main.temp,\n        city: data.name,\n        icon: data.weather[0].icon,\n      };\n      setResults(dataPoint);\n      console.log(results);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <div id=\"demo\">\n      {(latitude == \"\" && longitude == \"\") && (\n          <>\n\n            <h2>\n              Click Get Weather to check out today's weather forecast\n            </h2>\n          </>\n        )}\n        {(latitude !== \"\" && longitude !== \"\") && (\n          <>\n            <img\n              src={`http://openweathermap.org/img/wn/${results.icon}@2x.png`}\n              alt=\"Logo\"\n            />\n            <h1>{results.city}</h1>\n            <h2>\n              {getTemperature(results.temp)} {getMeasurement()}\n            </h2>\n          </>\n        )}\n      </div>\n\n      <button type=\"button\" onClick={() => fetchWeatherData()}>\n        Get Weather\n      </button>\n\n      <button type=\"button\" onClick={() => toggleMeasurement()}>\n        Celcius/Fahrenheit\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}